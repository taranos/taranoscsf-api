# Taranos Cloud Sonification Framework:  Taranos Rendering Protocol OpenAPI 2.0 Specification
# Copyright (C) 2018 David Hinson, Netrogen Blue LLC (dhinson@netrogenblue.com)

swagger: '2.0'

info:
  title: Taranos Rendering Protocol

  description: Wavefield rendering API for Taranos Cloud Sonification Framework clients.

  contact:
    name: dhinson@netrogenblue.com

  license:
    name: Non-proprietary.

  version: 0.5.0

host: 'localhost:9000'

basePath: /trp

schemes:
  - http

consumes:
  - application/json
  - application/x-www-form-urlencoded

produces:
  - application/json

#
# Models:
#
definitions:

  #
  # Common:
  #

  mServiceResult:
    title: Service Result
    type: object
    properties:
      k:
        title: Kind
        type: string
      s:
        title: Status
        type: integer
        format: int32
      r:
        title: Result Code
        type: integer
      e:
        title: Error Descriptor
        type: string
    required:
      - k
      - s
      - r
      - e

  mMetaKey:
    title: Key
    type: string
    minLength: 3
    maxLength: 50

  mMetaTag:
    title: Tag
    type: string
    minLength: 1
    maxLength: 40

  mMetaBadge:
    title: Badge
    type: string
    minLength: 1
    maxLength: 128

  mMetaName:
    title: Name
    type: string
    minLength: 1
    maxLength: 40

  mMetaDescription:
    title: Description
    type: string
    minLength: 1
    maxLength: 256

  mMetaAlias:
    title: Alias
    type: string
    minLength: 1
    maxLength: 40

  mDestructorScope:
    title: Destructor Scope
    type: string
    minLength: 1
    maxLength: 1
    enum: [d, s]

  mCommonConstructorMetas:
    title: Common Constructor Metas
    type: object
    properties:
      b:
        $ref: '#/definitions/mMetaBadge'
      d:
        $ref: '#/definitions/mMetaDescription'
      n:
        $ref: '#/definitions/mMetaName'
      t:
        $ref: '#/definitions/mMetaTag'
    required:
      - t

  mCommonConstructorMetasAliasable:
    title: Common Constructor Metas Aliasable
    type: object
    properties:
      a:
        $ref: '#/definitions/mMetaAlias'
      b:
        $ref: '#/definitions/mMetaBadge'
      d:
        $ref: '#/definitions/mMetaDescription'
      n:
        $ref: '#/definitions/mMetaName'
      t:
        $ref: '#/definitions/mMetaTag'
    required:
      - t

  mCommonUpdateMetas:
    title: Common Update Metas
    type: object
    properties:
      k:
        $ref: '#/definitions/mMetaKey'
      n:
        $ref: '#/definitions/mMetaName'
      d:
        $ref: '#/definitions/mMetaDescription'
    required:
      - k

  mCommonDestructorMetas:
    title: Common Destructor Metas
    type: object
    properties:
      k:
        $ref: '#/definitions/mMetaKey'
      s:
        $ref: '#/definitions/mDestructorScope'
    required:
      - k

  mMacroArgs:
    title: Macro Arguments
    type: array
    items:
      type: string

  mEmitterMacro:
    title: Emitter Macro
    type: object
    properties:
      create_channel:
        $ref: '#/definitions/mMacroArgs'
      destroy_channel:
        $ref: '#/definitions/mMacroArgs'
      set_channel_ceiling:
        $ref: '#/definitions/mMacroArgs'
      set_channel_poles:
        $ref: '#/definitions/mMacroArgs'
      set_channel_floor:
        $ref: '#/definitions/mMacroArgs'

  mEmitterCall:
    title: Emitter Call
    type: object
    properties:
      k:
        $ref: '#/definitions/mMetaKey'
      m:
        $ref: '#/definitions/mEmitterMacro'
    required:
      - k
      - m

  mOscillatorMacro:
    title: Oscillator Macro
    type: object
    properties:
      set_loudness_ceiling:
        $ref: '#/definitions/mMacroArgs'
      set_loudness_poles:
        $ref: '#/definitions/mMacroArgs'
      set_loudness_floor:
        $ref: '#/definitions/mMacroArgs'
      set_period_poles:
        $ref: '#/definitions/mMacroArgs'
      set_pitch_ceiling:
        $ref: '#/definitions/mMacroArgs'
      set_pitch_poles:
        $ref: '#/definitions/mMacroArgs'
      set_pitch_floor:
        $ref: '#/definitions/mMacroArgs'
      set_shape_poles:
        $ref: '#/definitions/mMacroArgs'
      set_tone_poles:
        $ref: '#/definitions/mMacroArgs'
      set_waveset_id:
        $ref: '#/definitions/mMacroArgs'

  mOscillatorCall:
    title: Oscillator Call
    type: object
    properties:
      k:
        $ref: '#/definitions/mMetaKey'
      m:
        $ref: '#/definitions/mOscillatorMacro'
    required:
      - k
      - m

  mPosition:
    title: Position
    type: array
    items:
      type: string
      minItems: 3
      maxItems: 3

  mRotation:
    title: Rotation
    type: array
    items:
      type: string
      minItems: 4
      maxItems: 4

  mPoleAxisOffset:
    title: Pole Axis Offset
    type: string

  mPoleDefinition:
    title: Pole Definition
    type: object
    properties:
      x:
        $ref: '#/definitions/mPoleAxisOffset'
      y:
        $ref: '#/definitions/mPoleAxisOffset'
    required:
      - x
      - y

  mEnvelopeCeiling:
    title: Envelope Ceiling
    type: string

  mEnvelopeFloor:
    title: Envelope Floor
    type: string

  mPoleDefinitions:
    title: Poles Definition
    type: array
    items:
      $ref: '#/definitions/mPoleDefinition'
    minItems: 1
    maxItems: 5

  mPackedPoleDefinitions:
    title: Packed Pole Definitions
    type: string

  mEnvelopeDefinition:
    title: Envelope Definition
    type: object
    properties:
      c:
        $ref: '#/definitions/mEnvelopeCeiling'
      f:
        $ref: '#/definitions/mEnvelopeFloor'
      dp:
        $ref: '#/definitions/mPoleDefinitions'
      dpp:
        $ref: '#/definitions/mPackedPoleDefinitions'

  mWavesetIdentifier:
    title: Waveset Identifier
    type: string

  mQualityEnvelopeDefinitions:
    title: Quality Envelope Definitions
    type: object
    properties:
      l:
        $ref: '#/definitions/mEnvelopeDefinition'
      p:
        $ref: '#/definitions/mEnvelopeDefinition'
      r:
        $ref: '#/definitions/mEnvelopeDefinition'
      s:
        $ref: '#/definitions/mEnvelopeDefinition'
      t:
        $ref: '#/definitions/mEnvelopeDefinition'
    required:
      - l
      - p
      - r
      - s
      - t

  mOscillatorPatchDefinition:
    title: Oscillator Patch Definition
    type: object
    properties:
      w:
        $ref: '#/definitions/mWavesetIdentifier'
      de:
        $ref: '#/definitions/mQualityEnvelopeDefinitions'
    required:
      - w
      - de

  mChannelDefinition:
    title: Channel Definition
    type: object
    properties:
      de:
        $ref: '#/definitions/mEnvelopeDefinition'
      dpo:
        $ref: '#/definitions/mOscillatorPatchDefinition'
    required:
      - de
      - dpo

  mEmitterPatchDefinition:
    title: Emitter Patch Definition
    type: object
    properties:
      dc:
        $ref: '#/definitions/mChannelDefinition'
    required:
      - dc

  #
  # Fields:
  #

  # Constructors:

  mFieldConstructorAttrs:
    title: Field Constructor Attributes
    type: object
    properties:
      ac:
        title: Acoustic Velocity (c)
        type: string
      ar:
        title: Acoustic Density (rho)
        type: string
      ad:
        title: Antipode Distance
        type: string
      fg:
        title: Field Geometry
        type: string
      dpe:
        $ref: '#/definitions/mEmitterPatchDefinition'

  mFieldConstructorRefs:
    title: Field Constructor References
    type: object
    properties:
      sm:
        $ref: '#/definitions/mMetaKey'
      t:
        $ref: '#/definitions/mMetaKey'

  mFieldConstructor:
    title: Field Constructor
    type: object
    properties:
      m:
        $ref: '#/definitions/mCommonConstructorMetas'
      a:
        $ref: '#/definitions/mFieldConstructorAttrs'
      r:
        $ref: '#/definitions/mFieldConstructorRefs'
    required:
      - m

  mFieldConstructorsSet:
    title: Field Constructors Set
    type: array
    items:
      $ref: '#/definitions/mFieldConstructor'

  mFieldConstructorsPayload:
    title: Field Constructors Payload
    type: object
    properties:
      cf:
        $ref: '#/definitions/mFieldConstructorsSet'
    required:
      - cf

  # Updates:

  mFieldUpdate:
    title: Field Update
    type: object
    properties:
      m:
        $ref: '#/definitions/mCommonUpdateMetas'
      p:
        $ref: '#/definitions/mProbeUpdatesSet'
      s:
        $ref: '#/definitions/mSubjectUpdatesSet'
    required:
      - m

  mFieldUpdatesSet:
    title: Field Updates Set
    type: array
    items:
      $ref: '#/definitions/mFieldUpdate'

  mFieldUpdatesPayload:
    title: Field Updates Payload
    type: object
    properties:
      uf:
        $ref: '#/definitions/mFieldUpdatesSet'
    required:
      - uf

  # Destructors:

  mFieldDestructor:
    title: Field Destructor
    type: object
    properties:
      m:
        $ref: '#/definitions/mCommonDestructorMetas'

  mFieldDestructorsSet:
    title: Field Destructors Set
    type: array
    items:
      $ref: '#/definitions/mFieldDestructor'

  mFieldDestructorsPayload:
    title: Field Destructors Payload
    type: object
    properties:
      df:
        $ref: '#/definitions/mFieldDestructorsSet'
    required:
      - df

  #
  # Field Emitters:
  #

  # Constructors:

  mFieldEmitterConstructorAttrs:
    title: Field Emitter Constructor Attributes
    type: object
    properties:
      dpe:
        $ref: '#/definitions/mEmitterPatchDefinition'

  mFieldEmitterConstructorRefs:
    title: Field Emitter Constructor References
    type: object
    properties:
      sm:
        $ref: '#/definitions/mMetaKey'

  mFieldEmitterConstructor:
    title: Field Emitter Constructor
    type: object
    properties:
      m:
        $ref: '#/definitions/mCommonConstructorMetas'
      a:
        $ref: '#/definitions/mFieldEmitterConstructorAttrs'
      r:
        $ref: '#/definitions/mFieldEmitterConstructorRefs'
    required:
      - m

  mFieldEmitterConstructorsSet:
    title: Field Emitter Constructors Set
    type: array
    items:
      $ref: '#/definitions/mFieldEmitterConstructor'

  mFieldEmitterConstructorsPayload:
    title: Field Emitter Constructors Payload
    type: object
    properties:
      cfe:
        $ref: '#/definitions/mFieldEmitterConstructorsSet'
    required:
      - cfe

  # Updates:

  mFieldEmitterUpdate:
    title: Field Emitter Update
    type: object
    properties:
      m:
        $ref: '#/definitions/mCommonUpdateMetas'
    required:
      - m

  mFieldEmitterUpdatesSet:
    title: Field Emitter Updates Set
    type: array
    items:
      $ref: '#/definitions/mFieldEmitterUpdate'

  mFieldEmitterUpdatesPayload:
    title: Field Emitter Updates Payload
    type: object
    properties:
      ufe:
        $ref: '#/definitions/mFieldEmitterUpdatesSet'
    required:
      - ufe

  # Destructors:

  mFieldEmitterDestructor:
    title: Field Emitter Destructor
    type: object
    properties:
      m:
        $ref: '#/definitions/mCommonDestructorMetas'

  mFieldEmitterDestructorsSet:
    title: Field Emitter Destructors Set
    type: array
    items:
      $ref: '#/definitions/mFieldEmitterDestructor'

  mFieldEmitterDestructorsPayload:
    title: Field Emitter Destructors Payload
    type: object
    properties:
      dfe:
        $ref: '#/definitions/mFieldEmitterDestructorsSet'
    required:
      - dfe

  # Calls:

  mFieldEmitterCallsSet:
    title: Field Emitter Calls Set
    type: array
    items:
      $ref: '#/definitions/mEmitterCall'

  mFieldEmitterCallsPayload:
    title: Field Emitter Calls Payload
    type: object
    properties:
      mfe:
        $ref: '#/definitions/mFieldEmitterCallsSet'
    required:
      - mfe

  #
  # Field Oscillators:
  #

  # Constructors:

  mFieldOscillatorConstructorAttrs:
    title: Field Oscillator Constructor Attributes
    type: object
    properties:
      dc:
        $ref: '#/definitions/mChannelDefinition'

  mFieldOscillatorConstructor:
    title: Field Oscillator Constructor
    type: object
    properties:
      m:
        $ref: '#/definitions/mCommonConstructorMetas'
      a:
        $ref: '#/definitions/mFieldOscillatorConstructorAttrs'
    required:
      - m

  mFieldOscillatorConstructorsSet:
    title: Field Oscillator Constructors Set
    type: array
    items:
      $ref: '#/definitions/mFieldOscillatorConstructor'

  mFieldOscillatorConstructorsPayload:
    title: Field Oscillator Constructors Payload
    type: object
    properties:
      cfo:
        $ref: '#/definitions/mFieldOscillatorConstructorsSet'
    required:
      - cfo

  # Updates:

  mFieldOscillatorUpdate:
    title: Field Oscillator Update
    type: object
    properties:
      m:
        $ref: '#/definitions/mCommonUpdateMetas'
    required:
      - m

  mFieldOscillatorUpdatesSet:
    title: Field Oscillator Updates Set
    type: array
    items:
      $ref: '#/definitions/mFieldOscillatorUpdate'

  mFieldOscillatorUpdatesPayload:
    title: Field Oscillator Updates Payload
    type: object
    properties:
      ufo:
        $ref: '#/definitions/mFieldOscillatorUpdatesSet'
    required:
      - ufo

  # Destructors:

  mFieldOscillatorDestructor:
    title: Field Oscillator Destructor
    type: object
    properties:
      m:
        $ref: '#/definitions/mCommonDestructorMetas'

  mFieldOscillatorDestructorsSet:
    title: Field Oscillator Destructors Set
    type: array
    items:
      $ref: '#/definitions/mFieldOscillatorDestructor'

  mFieldOscillatorDestructorsPayload:
    title: Field Oscillator Destructors Payload
    type: object
    properties:
      dfo:
        $ref: '#/definitions/mFieldOscillatorDestructorsSet'
    required:
      - dfo

  # Calls:

  mFieldOscillatorCallsSet:
    title: Field Oscillator Calls Set
    type: array
    items:
      $ref: '#/definitions/mOscillatorCall'

  mFieldOscillatorCallsPayload:
    title: Field Oscillator Calls Payload
    type: object
    properties:
      mfo:
        $ref: '#/definitions/mFieldOscillatorCallsSet'
    required:
      - mfo

  #
  # Subjects:
  #

  # Constructors:

  mSubjectConstructorAttrs:
    title: Subject Constructor Attributes
    type: object
    properties:
      dpe:
        $ref: '#/definitions/mEmitterPatchDefinition'

  mSubjectConstructorRefs:
    title: Subject Constructor References
    type: object
    properties:
      sm:
        $ref: '#/definitions/mMetaKey'

  mSubjectConstructorStates:
    title: Subject Constructor States
    type: object
    properties:
      p:
        $ref: '#/definitions/mPosition'
      r:
        $ref: '#/definitions/mRotation'

  mSubjectConstructor:
    title: Subject Constructor
    type: object
    properties:
      m:
        $ref: '#/definitions/mCommonConstructorMetas'
      a:
        $ref: '#/definitions/mSubjectConstructorAttrs'
      r:
        $ref: '#/definitions/mSubjectConstructorRefs'
      s:
        $ref: '#/definitions/mSubjectConstructorStates'
    required:
      - m

  mSubjectConstructorsSet:
    title: Subject Constructors Set
    type: array
    items:
      $ref: '#/definitions/mSubjectConstructor'

  mSubjectConstructorsPayload:
    title: Subject Constructors Payload
    type: object
    properties:
      cs:
        $ref: '#/definitions/mSubjectConstructorsSet'
    required:
      - cs

  # Updates:

  mSubjectUpdateStates:
    title: Subject Update States
    type: object
    properties:
      p:
        $ref: '#/definitions/mPosition'
      r:
        $ref: '#/definitions/mRotation'

  mSubjectUpdate:
    title: Subject Update
    type: object
    properties:
      m:
        $ref: '#/definitions/mCommonUpdateMetas'
      s:
        $ref: '#/definitions/mSubjectUpdateStates'
    required:
      - m

  mSubjectUpdatesSet:
    title: Subject Updates Set
    type: array
    items:
      $ref: '#/definitions/mSubjectUpdate'

  mSubjectUpdatesPayload:
    title: Subject Updates Payload
    type: object
    properties:
      us:
        $ref: '#/definitions/mSubjectUpdatesSet'
    required:
      - us

  # Destructors:

  mSubjectDestructor:
    title: Subject Destructor
    type: object
    properties:
      m:
        $ref: '#/definitions/mCommonDestructorMetas'

  mSubjectDestructorsSet:
    title: Subject Destructors Set
    type: array
    items:
      $ref: '#/definitions/mSubjectDestructor'

  mSubjectDestructorsPayload:
    title: Subject Destructors Payload
    type: object
    properties:
      ds:
        $ref: '#/definitions/mSubjectDestructorsSet'
    required:
      - ds

  #
  # Subject Emitters:
  #

  # Constructors:

  mSubjectEmitterConstructorAttrs:
    title: Subject Emitter Constructor Attributes
    type: object
    properties:
      dpe:
        $ref: '#/definitions/mEmitterPatchDefinition'

  mSubjectEmitterConstructorRefs:
    title: Subject Emitter Constructor References
    type: object
    properties:
      sm:
        $ref: '#/definitions/mMetaKey'

  mSubjectEmitterConstructor:
    title: Subject Emitter Constructor
    type: object
    properties:
      m:
        $ref: '#/definitions/mCommonConstructorMetas'
      a:
        $ref: '#/definitions/mSubjectEmitterConstructorAttrs'
      r:
        $ref: '#/definitions/mSubjectEmitterConstructorRefs'
    required:
      - m

  mSubjectEmitterConstructorsSet:
    title: Subject Emitter Constructors Set
    type: array
    items:
      $ref: '#/definitions/mSubjectEmitterConstructor'

  mSubjectEmitterConstructorsPayload:
    title: Subject Emitter Constructors Payload
    type: object
    properties:
      cse:
        $ref: '#/definitions/mSubjectEmitterConstructorsSet'
    required:
      - cse

  # Updates:

  mSubjectEmitterUpdate:
    title: Subject Emitter Update
    type: object
    properties:
      m:
        $ref: '#/definitions/mCommonUpdateMetas'
    required:
      - m

  mSubjectEmitterUpdatesSet:
    title: Subject Emitter Updates Set
    type: array
    items:
      $ref: '#/definitions/mSubjectEmitterUpdate'

  mSubjectEmitterUpdatesPayload:
    title: Subject Emitter Updates Payload
    type: object
    properties:
      use:
        $ref: '#/definitions/mSubjectEmitterUpdatesSet'
    required:
      - use

  # Destructors:

  mSubjectEmitterDestructor:
    title: Subject Emitter Destructor
    type: object
    properties:
      m:
        $ref: '#/definitions/mCommonDestructorMetas'

  mSubjectEmitterDestructorsSet:
    title: Subject Emitter Destructors Set
    type: array
    items:
      $ref: '#/definitions/mSubjectEmitterDestructor'

  mSubjectEmitterDestructorsPayload:
    title: Subject Emitter Destructors Payload
    type: object
    properties:
      dse:
        $ref: '#/definitions/mSubjectEmitterDestructorsSet'
    required:
      - dse

  # Calls:

  mSubjectEmitterCallsSet:
    title: Subject Emitter Calls Set
    type: array
    items:
      $ref: '#/definitions/mEmitterCall'

  mSubjectEmitterCallsPayload:
    title: Subject Emitter Calls Payload
    type: object
    properties:
      mse:
        $ref: '#/definitions/mSubjectEmitterCallsSet'
    required:
      - mse

  #
  # Subject Oscillators:
  #

  # Constructors:

  mSubjectOscillatorConstructorAttrs:
    title: Subject Oscillator Constructor Attributes
    type: object
    properties:
      dc:
        $ref: '#/definitions/mChannelDefinition'

  mSubjectOscillatorConstructor:
    title: Subject Oscillator Constructor
    type: object
    properties:
      m:
        $ref: '#/definitions/mCommonConstructorMetas'
      a:
        $ref: '#/definitions/mSubjectOscillatorConstructorAttrs'
    required:
      - m

  mSubjectOscillatorConstructorsSet:
    title: Subject Oscillator Constructors Set
    type: array
    items:
      $ref: '#/definitions/mSubjectOscillatorConstructor'

  mSubjectOscillatorConstructorsPayload:
    title: Subject Oscillator Constructors Payload
    type: object
    properties:
      cso:
        $ref: '#/definitions/mSubjectOscillatorConstructorsSet'
    required:
      - cso

  # Updates:

  mSubjectOscillatorUpdate:
    title: Subject Oscillator Update
    type: object
    properties:
      m:
        $ref: '#/definitions/mCommonUpdateMetas'
    required:
      - m

  mSubjectOscillatorUpdatesSet:
    title: Subject Oscillator Updates Set
    type: array
    items:
      $ref: '#/definitions/mSubjectOscillatorUpdate'

  mSubjectOscillatorUpdatesPayload:
    title: Subject Oscillator Updates Payload
    type: object
    properties:
      uso:
        $ref: '#/definitions/mSubjectOscillatorUpdatesSet'
    required:
      - uso

  # Destructors:

  mSubjectOscillatorDestructor:
    title: Subject Oscillator Destructor
    type: object
    properties:
      m:
        $ref: '#/definitions/mCommonDestructorMetas'

  mSubjectOscillatorDestructorsSet:
    title: Subject Oscillator Destructors Set
    type: array
    items:
      $ref: '#/definitions/mSubjectOscillatorDestructor'

  mSubjectOscillatorDestructorsPayload:
    title: Subject Oscillator Destructors Payload
    type: object
    properties:
      dso:
        $ref: '#/definitions/mSubjectOscillatorDestructorsSet'
    required:
      - dso

  # Calls:

  mSubjectOscillatorCallsSet:
    title: Subject Oscillator Calls Set
    type: array
    items:
      $ref: '#/definitions/mOscillatorCall'

  mSubjectOscillatorCallsPayload:
    title: Subject Oscillator Calls Payload
    type: object
    properties:
      mso:
        $ref: '#/definitions/mSubjectOscillatorCallsSet'
    required:
      - mso

  #
  # Probes:
  #

  # Constructors:

  mProbeConstructorAttrs:
    title: Probe Constructor Attributes
    type: object
    properties:
      aa:
        title: Acoustic Area (a)
        type: string
      st:
        title: Squelch Threshold
        type: string
      lr:
        title: Lobe Range
        type: string
      lrp:
        title: Lobe Range Poles
        type: string
      lbp:
        title: Lobe Bearing Poles
        type: string

  mProbeConstructorRefs:
    title: Probe Constructor References
    type: object
    properties:
      sm:
        $ref: '#/definitions/mMetaKey'

  mProbeConstructorStates:
    title: Probe Constructor States
    type: object
    properties:
      p:
        $ref: '#/definitions/mPosition'
      r:
        $ref: '#/definitions/mRotation'

  mProbeConstructor:
    title: Probe Constructor
    type: object
    properties:
      m:
        $ref: '#/definitions/mCommonConstructorMetas'
      a:
        $ref: '#/definitions/mProbeConstructorAttrs'
      r:
        $ref: '#/definitions/mProbeConstructorRefs'
      s:
        $ref: '#/definitions/mProbeConstructorStates'
    required:
      - m

  mProbeConstructorsSet:
    title: Probe Constructors Set
    type: array
    items:
      $ref: '#/definitions/mProbeConstructor'

  mProbeConstructorsPayload:
    title: Probe Constructors Payload
    type: object
    properties:
      cp:
        $ref: '#/definitions/mProbeConstructorsSet'
    required:
      - cp

  # Updates:

  mProbeUpdateStates:
    title: Probe Update States
    type: object
    properties:
      p:
        $ref: '#/definitions/mPosition'
      r:
        $ref: '#/definitions/mRotation'

  mProbeUpdate:
    title: Probe Update
    type: object
    properties:
      m:
        $ref: '#/definitions/mCommonUpdateMetas'
      s:
        $ref: '#/definitions/mProbeUpdateStates'
    required:
      - m

  mProbeUpdatesSet:
    title: Probe Updates Set
    type: array
    items:
      $ref: '#/definitions/mProbeUpdate'

  mProbeUpdatesPayload:
    title: Probe Updates Payload
    type: object
    properties:
      up:
        $ref: '#/definitions/mProbeUpdatesSet'
    required:
      - up

  # Destructors:

  mProbeDestructor:
    title: Probe Destructor
    type: object
    properties:
      m:
          $ref: '#/definitions/mCommonDestructorMetas'

  mProbeDestructorsSet:
    title: Probe Destructors Set
    type: array
    items:
      $ref: '#/definitions/mProbeDestructor'

  mProbeDestructorsPayload:
    title: Probe Destructors Payload
    type: object
    properties:
      dp:
        $ref: '#/definitions/mProbeDestructorsSet'
    required:
      - dp

  #
  # Probe Emitters:
  #

  # Constructors:

  mProbeEmitterConstructorAttrs:
    title: Probe Emitter Constructor Attributes
    type: object
    properties:
      dpe:
        $ref: '#/definitions/mEmitterPatchDefinition'

  mProbeEmitterConstructorRefs:
    title: Probe Emitter Constructor References
    type: object
    properties:
      sm:
        $ref: '#/definitions/mMetaKey'

  mProbeEmitterConstructor:
    title: Probe Emitter Constructor
    type: object
    properties:
      m:
        $ref: '#/definitions/mCommonConstructorMetas'
      a:
        $ref: '#/definitions/mProbeEmitterConstructorAttrs'
      r:
        $ref: '#/definitions/mProbeEmitterConstructorRefs'
    required:
      - m

  mProbeEmitterConstructorsSet:
    title: Probe Emitter Constructors Set
    type: array
    items:
      $ref: '#/definitions/mProbeEmitterConstructor'

  mProbeEmitterConstructorsPayload:
    title: Probe Emitter Constructors Payload
    type: object
    properties:
      cpe:
        $ref: '#/definitions/mProbeEmitterConstructorsSet'
    required:
      - cpe

  # Updates:

  mProbeEmitterUpdate:
    title: Probe Emitter Update
    type: object
    properties:
      m:
        $ref: '#/definitions/mCommonUpdateMetas'
    required:
      - m

  mProbeEmitterUpdatesSet:
    title: Probe Emitter Updates Set
    type: array
    items:
      $ref: '#/definitions/mProbeEmitterUpdate'

  mProbeEmitterUpdatesPayload:
    title: Probe Emitter Updates Payload
    type: object
    properties:
      upe:
          $ref: '#/definitions/mProbeEmitterUpdatesSet'
    required:
      - upe

  # Destructors:

  mProbeEmitterDestructor:
    title: Probe Emitter Destructor
    type: object
    properties:
      m:
        $ref: '#/definitions/mCommonDestructorMetas'

  mProbeEmitterDestructorsSet:
    title: Probe Emitter Destructors Set
    type: array
    items:
      $ref: '#/definitions/mProbeEmitterDestructor'

  mProbeEmitterDestructorsPayload:
    title: Probe Emitter Destructors Payload
    type: object
    properties:
      dpe:
        $ref: '#/definitions/mProbeEmitterDestructorsSet'
    required:
      - dpe

  # Calls:

  mProbeEmitterCallsSet:
    title: Probe Emitter Calls Set
    type: array
    items:
      $ref: '#/definitions/mEmitterCall'

  mProbeEmitterCallsPayload:
    title: Probe Emitter Calls Payload
    type: object
    properties:
      mpe:
        $ref: '#/definitions/mProbeEmitterCallsSet'
    required:
      - mpe

  #
  # Probe Oscillators:
  #

  # Constructors:

  mProbeOscillatorConstructorAttrs:
    title: Probe Oscillator Constructor Attributes
    type: object
    properties:
      dc:
        $ref: '#/definitions/mChannelDefinition'

  mProbeOscillatorConstructor:
    title: Probe Oscillator Constructor
    type: object
    properties:
      m:
        $ref: '#/definitions/mCommonConstructorMetas'
      a:
        $ref: '#/definitions/mProbeOscillatorConstructorAttrs'
    required:
      - m

  mProbeOscillatorConstructorsSet:
    title: Probe Oscillator Constructors Set
    type: array
    items:
      $ref: '#/definitions/mProbeOscillatorConstructor'

  mProbeOscillatorConstructorsPayload:
    title: Probe Oscillator Constructors Payload
    type: object
    properties:
      cpo:
        $ref: '#/definitions/mProbeOscillatorConstructorsSet'
    required:
      - cpo

  # Updates:

  mProbeOscillatorUpdate:
    title: Probe Oscillator Update
    type: object
    properties:
      m:
        $ref: '#/definitions/mCommonUpdateMetas'
    required:
      - m

  mProbeOscillatorUpdatesSet:
    title: Probe Oscillator Updates Set
    type: array
    items:
      $ref: '#/definitions/mProbeOscillatorUpdate'

  mProbeOscillatorUpdatesPayload:
    title: Probe Oscillator Updates Payload
    type: object
    properties:
      upo:
        $ref: '#/definitions/mProbeOscillatorUpdatesSet'
    required:
      - upo

  # Destructors:

  mProbeOscillatorDestructor:
    title: Probe Oscillator Destructor
    type: object
    properties:
      m:
        $ref: '#/definitions/mCommonDestructorMetas'

  mProbeOscillatorDestructorsSet:
    title: Probe Oscillator Destructors Set
    type: array
    items:
      $ref: '#/definitions/mProbeOscillatorDestructor'

  mProbeOscillatorDestructorsPayload:
    title: Probe Oscillator Destructors Payload
    type: object
    properties:
      dpo:
        $ref: '#/definitions/mProbeOscillatorDestructorsSet'
    required:
      - dpo

  # Calls:

  mProbeOscillatorCallsSet:
    title: Probe Oscillator Calls Set
    type: array
    items:
      $ref: '#/definitions/mOscillatorCall'

  mProbeOscillatorCallsPayload:
    title: Probe Oscillator Calls Payload
    type: object
    properties:
      mso:
        $ref: '#/definitions/mProbeOscillatorCallsSet'
    required:
      - mso

  #
  # Probe Collectors:
  #

  # Constructors:

  mProbeCollectorConstructorAttrs:
    title: Probe Collector Constructor Attributes
    type: object
    properties:
      aa:
        title: Acoustic Area (a)
        type: string
      st:
        title: Squelch Threshold
        type: string
      lr:
        title: Lobe Range
        type: string
      lrp:
        title: Lobe Range Poles
        type: string
      lbp:
        title: Lobe Bearing Poles
        type: string

  mProbeCollectorConstructor:
    title: Probe Collector Constructor
    type: object
    properties:
      m:
        $ref: '#/definitions/mCommonConstructorMetasAliasable'
      a:
        $ref: '#/definitions/mProbeCollectorConstructorAttrs'
    required:
      - m

  mProbeCollectorConstructorsSet:
    title: Probe Collector Constructors Set
    type: array
    items:
      $ref: '#/definitions/mProbeCollectorConstructor'

  mProbeCollectorConstructorsPayload:
    title: Probe Collector Constructors Payload
    type: object
    properties:
      cpc:
        $ref: '#/definitions/mProbeCollectorConstructorsSet'
    required:
      - cpc

  # Updates:

  mProbeCollectorUpdateAttrs:
    title: Probe Collector Update Attributes
    type: object
    properties:
      aa:
        title: Acoustic Area (a)
        type: string
      st:
        title: Squelch Threshold
        type: string
      lr:
        title: Lobe Range
        type: string
      lrp:
        title: Lobe Range Poles
        type: string
      lbp:
        title: Lobe Bearing Poles
        type: string

  mProbeCollectorUpdate:
    title: Probe Collector Update
    type: object
    properties:
      m:
        $ref: '#/definitions/mCommonUpdateMetas'
      a:
        $ref: '#/definitions/mProbeCollectorUpdateAttrs'
    required:
      - m

  mProbeCollectorUpdatesSet:
    title: Probe Collector Updates Set
    type: array
    items:
      $ref: '#/definitions/mProbeCollectorUpdate'

  mProbeCollectorUpdatesPayload:
    title: Probe Collector Updates Payload
    type: object
    properties:
      upc:
        $ref: '#/definitions/mProbeCollectorUpdatesSet'
    required:
      - upc

  # Destructors:

  mProbeCollectorDestructor:
    title: Probe Collector Destructor
    type: object
    properties:
      m:
        $ref: '#/definitions/mCommonDestructorMetas'

  mProbeCollectorDestructorsSet:
    title: Probe Collector Destructors Set
    type: array
    items:
      $ref: '#/definitions/mProbeCollectorDestructor'

  mProbeCollectorDestructorsPayload:
    title: Probe Collector Destructors Payload
    type: object
    properties:
      dpc:
        $ref: '#/definitions/mProbeCollectorDestructorsSet'
    required:
      - dpc

  #
  # Emitter Patches:
  #

  # Updates:

  mEmitterPatchUpdateAttrs:
    title: Emitter Patch Update Attributes
    type: object
    properties:
      dpe:
        $ref: '#/definitions/mEmitterPatchDefinition'

  mEmitterPatchUpdate:
    title: Emitter Patch Update
    type: object
    properties:
      m:
        $ref: '#/definitions/mCommonUpdateMetas'
      a:
        $ref: '#/definitions/mEmitterPatchUpdateAttrs'
    required:
      - m

  mEmitterPatchUpdatesSet:
    title: Emitter Patch Updates Set
    type: array
    items:
      $ref: '#/definitions/mEmitterPatchUpdate'

  mEmitterPatchUpdatesPayload:
    title: Emitter Patch Updates Payload
    type: object
    properties:
      usmpe:
        $ref: '#/definitions/mEmitterPatchUpdatesSet'
    required:
      - usmpe

  #
  # Oscillator Patches:
  #

  # Updates:

  mOscillatorPatchUpdateAttrs:
    title: Oscillator Patch Update Attributes
    type: object
    properties:
      dpo:
        $ref: '#/definitions/mOscillatorPatchDefinition'

  mOscillatorPatchUpdate:
    title: Oscillator Patch Update
    type: object
    properties:
      m:
        $ref: '#/definitions/mCommonUpdateMetas'
      a:
        $ref: '#/definitions/mOscillatorPatchUpdateAttrs'
    required:
      - m

  mOscillatorPatchUpdatesSet:
    title: Oscillator Patch Updates Set
    type: array
    items:
      $ref: '#/definitions/mOscillatorPatchUpdate'

  mOscillatorPatchUpdatesPayload:
    title: Oscillator Patch Updates Payload
    type: object
    properties:
      usmpo:
        $ref: '#/definitions/mOscillatorPatchUpdatesSet'
    required:
      - usmpo

  #
  # Oscillator Patch Envelopes:
  #

  # Updates:

  mOscillatorPatchEnvelopeUpdate:
    title: Oscillator Patch Envelope Update
    type: object
    properties:
      k:
        $ref: '#/definitions/mMetaKey'
      de:
        $ref: '#/definitions/mEnvelopeDefinition'
    required:
      - k
      - de

  mOscillatorPatchEnvelopeUpdatesSet:
    title: Oscillator Patch Envelope Updates Set
    type: array
    items:
      $ref: '#/definitions/mOscillatorPatchEnvelopeUpdate'

  mOscillatorPatchEnvelopeUpdatesPayload:
    title: Oscillator Patch Envelope Updates Payload
    type: object
    properties:
      usmpoe:
        $ref: '#/definitions/mOscillatorPatchEnvelopeUpdatesSet'
    required:
      - usmpoe

#
# Parameters:
#
parameters:

  # Common:

  pCommonQuerySections:
    name: s
    in: query
    description: Report sections.
    required: false
    type: string

  # Fields:

  pFieldKey:
    name: fieldKey
    in: path
    description: Field key.
    required: true
    type: string

  pFieldQueryKey:
    name: k
    in: query
    description: Field key.
    required: false
    collectionFormat: multi
    type: array
    items:
      type: string

  pFieldConstructorsPayload:
    name: fieldConstructorsPayload
    in: body
    description: Field constructors payload.
    required: true
    schema:
      $ref: '#/definitions/mFieldConstructorsPayload'

  pFieldUpdatesPayload:
    name: fieldUpdatesPayload
    in: body
    description: Field updates payload.
    required: true
    schema:
      $ref: '#/definitions/mFieldUpdatesPayload'

  pFieldDestructorsPayload:
    name: fieldDestructorsPayload
    in: body
    description: Field destructors payload.
    required: true
    schema:
      $ref: '#/definitions/mFieldDestructorsPayload'

  # Field Emitters:

  pFieldEmitterKey:
    name: fieldEmitterKey
    in: path
    description: Field emitter key.
    required: true
    type: string

  pFieldEmitterQueryKey:
    name: k
    in: query
    description: Field emitter key.
    required: false
    collectionFormat: multi
    type: array
    items:
      type: string

  pFieldEmitterConstructorsPayload:
    name: fieldEmitterConstructorsPayload
    in: body
    description: Field emitter constructors payload.
    required: true
    schema:
      $ref: '#/definitions/mFieldEmitterConstructorsPayload'

  pFieldEmitterUpdatesPayload:
    name: fieldEmitterUpdatesPayload
    in: body
    description: Field emitter updates payload.
    required: true
    schema:
      $ref: '#/definitions/mFieldEmitterUpdatesPayload'

  pFieldEmitterDestructorsPayload:
    name: fieldEmitterDestructorsPayload
    in: body
    description: Field emitter destructors payload.
    required: true
    schema:
      $ref: '#/definitions/mFieldEmitterDestructorsPayload'

  pFieldEmitterCallsPayload:
    name: fieldEmitterCallsPayload
    in: body
    description: Field emitter calls payload.
    required: true
    schema:
      $ref: '#/definitions/mFieldEmitterCallsPayload'

  # Field Oscillators:

  pFieldOscillatorKey:
    name: fieldOscillatorKey
    in: path
    description: Field oscillator key.
    required: true
    type: string

  pFieldOscillatorQueryKey:
    name: k
    in: query
    description: Field oscillator key.
    required: false
    collectionFormat: multi
    type: array
    items:
      type: string

  pFieldOscillatorConstructorsPayload:
    name: fieldOscillatorConstructorsPayload
    in: body
    description: Field oscillator constructors payload.
    required: true
    schema:
      $ref: '#/definitions/mFieldOscillatorConstructorsPayload'

  pFieldOscillatorUpdatesPayload:
    name: fieldOscillatorUpdatesPayload
    in: body
    description: Field oscillator updates payload.
    required: true
    schema:
      $ref: '#/definitions/mFieldOscillatorUpdatesPayload'

  pFieldOscillatorDestructorsPayload:
    name: fieldOscillatorDestructorsPayload
    in: body
    description: Field oscillator destructors payload.
    required: true
    schema:
      $ref: '#/definitions/mFieldOscillatorDestructorsPayload'

  pFieldOscillatorCallsPayload:
    name: fieldOscillatorCallsPayload
    in: body
    description: Field oscillator calls payload.
    required: true
    schema:
      $ref: '#/definitions/mFieldOscillatorCallsPayload'

  # Subjects:

  pSubjectKey:
    name: subjectKey
    in: path
    description: Subject key.
    required: true
    type: string

  pSubjectQueryKey:
    name: k
    in: query
    description: Subject key.
    required: false
    collectionFormat: multi
    type: array
    items:
      type: string

  pSubjectConstructorsPayload:
    name: subjectConstructorsPayload
    in: body
    description: Subject constructors payload.
    required: true
    schema:
      $ref: '#/definitions/mSubjectConstructorsPayload'

  pSubjectUpdatesPayload:
    name: subjectUpdatesPayload
    in: body
    description: Subject updates payload.
    required: true
    schema:
      $ref: '#/definitions/mSubjectUpdatesPayload'

  pSubjectDestructorsPayload:
    name: subjectDestructorsPayload
    in: body
    description: Subject destructors payload.
    required: true
    schema:
      $ref: '#/definitions/mSubjectDestructorsPayload'

  # Subject Emitters:

  pSubjectEmitterKey:
    name: subjectEmitterKey
    in: path
    description: Subject emitter key.
    required: true
    type: string

  pSubjectEmitterQueryKey:
    name: k
    in: query
    description: Subject emitter key.
    required: false
    collectionFormat: multi
    type: array
    items:
      type: string

  pSubjectEmitterConstructorsPayload:
    name: subjectEmitterConstructorsPayload
    in: body
    description: Subject emitter constructors payload.
    required: true
    schema:
      $ref: '#/definitions/mSubjectEmitterConstructorsPayload'

  pSubjectEmitterUpdatesPayload:
    name: subjectEmitterUpdatesPayload
    in: body
    description: Subject emitter updates payload.
    required: true
    schema:
      $ref: '#/definitions/mSubjectEmitterUpdatesPayload'

  pSubjectEmitterDestructorsPayload:
    name: subjectEmitterDestructorsPayload
    in: body
    description: Subject emitter destructors payload.
    required: true
    schema:
      $ref: '#/definitions/mSubjectEmitterDestructorsPayload'

  pSubjectEmitterCallsPayload:
    name: fieldSubjectCallsPayload
    in: body
    description: Subject emitter calls payload.
    required: true
    schema:
      $ref: '#/definitions/mSubjectEmitterCallsPayload'

  # Subject Oscillators:

  pSubjectOscillatorKey:
    name: subjectOscillatorKey
    in: path
    description: Subject oscillator key.
    required: true
    type: string

  pSubjectOscillatorQueryKey:
    name: k
    in: query
    description: Subject oscillator key.
    required: false
    collectionFormat: multi
    type: array
    items:
      type: string

  pSubjectOscillatorConstructorsPayload:
    name: subjectOscillatorConstructorsPayload
    in: body
    description: Subject oscillator constructors payload.
    required: true
    schema:
      $ref: '#/definitions/mSubjectOscillatorConstructorsPayload'

  pSubjectOscillatorUpdatesPayload:
    name: subjectOscillatorUpdatesPayload
    in: body
    description: Subject oscillator updates payload.
    required: true
    schema:
      $ref: '#/definitions/mSubjectOscillatorUpdatesPayload'

  pSubjectOscillatorDestructorsPayload:
    name: subjectOscillatorDestructorsPayload
    in: body
    description: Subject oscillator destructors payload.
    required: true
    schema:
      $ref: '#/definitions/mSubjectOscillatorDestructorsPayload'

  pSubjectOscillatorCallsPayload:
    name: subjectOscillatorCallsPayload
    in: body
    description: Subject oscillator calls payload.
    required: true
    schema:
      $ref: '#/definitions/mSubjectOscillatorCallsPayload'

  # Probes:

  pProbeKey:
    name: probeKey
    in: path
    description: Probe key.
    required: true
    type: string

  pProbeQueryKey:
    name: k
    in: query
    description: Probe key.
    required: false
    collectionFormat: multi
    type: array
    items:
      type: string

  pProbeConstructorsPayload:
    name: probeConstructorsPayload
    in: body
    description: Probe constructors payload.
    required: true
    schema:
      $ref: '#/definitions/mProbeConstructorsPayload'

  pProbeUpdatesPayload:
    name: probeUpdatesPayload
    in: body
    description: Probe updates payload.
    required: true
    schema:
      $ref: '#/definitions/mProbeUpdatesPayload'

  pProbeDestructorsPayload:
    name: probeDestructorsPayload
    in: body
    description: Probe destructors payload.
    required: true
    schema:
      $ref: '#/definitions/mProbeDestructorsPayload'

  # Probe Emitters:

  pProbeEmitterKey:
    name: probeEmitterKey
    in: path
    description: Probe emitter key.
    required: true
    type: string

  pProbeEmitterQueryKey:
    name: k
    in: query
    description: Probe emitter key.
    required: false
    collectionFormat: multi
    type: array
    items:
      type: string

  pProbeEmitterConstructorsPayload:
    name: probeEmitterConstructorsPayload
    in: body
    description: Probe emitter constructors payload.
    required: true
    schema:
      $ref: '#/definitions/mProbeEmitterConstructorsPayload'

  pProbeEmitterUpdatesPayload:
    name: probeEmitterUpdatesPayload
    in: body
    description: Probe emitter updates payload.
    required: true
    schema:
      $ref: '#/definitions/mProbeEmitterUpdatesPayload'

  pProbeEmitterDestructorsPayload:
    name: probeEmitterDestructorsPayload
    in: body
    description: Probe emitter destructors payload.
    required: true
    schema:
      $ref: '#/definitions/mProbeEmitterDestructorsPayload'

  pProbeEmitterCallsPayload:
    name: probeSubjectCallsPayload
    in: body
    description: Probe emitter calls payload.
    required: true
    schema:
      $ref: '#/definitions/mProbeEmitterCallsPayload'

  # Probe Oscillators:

  pProbeOscillatorKey:
    name: probeOscillatorKey
    in: path
    description: Probe oscillator key.
    required: true
    type: string

  pProbeOscillatorQueryKey:
    name: k
    in: query
    description: Probe oscillator key.
    required: false
    collectionFormat: multi
    type: array
    items:
      type: string

  pProbeOscillatorConstructorsPayload:
    name: probeOscillatorConstructorsPayload
    in: body
    description: Probe oscillator constructors payload.
    required: true
    schema:
      $ref: '#/definitions/mProbeOscillatorConstructorsPayload'

  pProbeOscillatorUpdatesPayload:
    name: probeOscillatorUpdatesPayload
    in: body
    description: Probe oscillator updates payload.
    required: true
    schema:
      $ref: '#/definitions/mProbeOscillatorUpdatesPayload'

  pProbeOscillatorDestructorsPayload:
    name: probeOscillatorDestructorsPayload
    in: body
    description: Probe oscillator destructors payload.
    required: true
    schema:
      $ref: '#/definitions/mProbeOscillatorDestructorsPayload'

  pProbeOscillatorCallsPayload:
    name: probeOscillatorCallsPayload
    in: body
    description: Probe oscillator calls payload.
    required: true
    schema:
      $ref: '#/definitions/mProbeOscillatorCallsPayload'

  # Probe Collectors:

  pProbeCollectorKey:
    name: probeCollectorKey
    in: path
    description: Probe collector key.
    required: true
    type: string

  pProbeCollectorQueryKey:
    name: k
    in: query
    description: Probe collector key.
    required: false
    collectionFormat: multi
    type: array
    items:
      type: string

  pProbeCollectorAlias:
    name: probeCollectorAlias
    in: path
    description: Probe collector alias.
    required: true
    type: string

  pProbeCollectorConstructorsPayload:
    name: probeCollectorConstructorsPayload
    in: body
    description: Probe collector constructors payload.
    required: true
    schema:
      $ref: '#/definitions/mProbeCollectorConstructorsPayload'

  pProbeCollectorUpdatesPayload:
    name: probeCollectorUpdatesPayload
    in: body
    description: Probe collector updates payload.
    required: true
    schema:
      $ref: '#/definitions/mProbeCollectorUpdatesPayload'

  pProbeCollectorDestructorsPayload:
    name: probeCollectorDestructorsPayload
    in: body
    description: Probe collector destructors payload.
    required: true
    schema:
      $ref: '#/definitions/mProbeCollectorDestructorsPayload'

  # Emitter Patches:

  pEmitterPatchKey:
    name: emitterPatchKey
    in: path
    description: Emitter patch key.
    required: true
    type: string

  pEmitterPatchQueryKey:
    name: k
    in: query
    description: Emitter patch key.
    required: false
    collectionFormat: multi
    type: array
    items:
      type: string

  pEmitterPatchUpdatesPayload:
    name: emitterPatchUpdatesPayload
    in: body
    description: Emitter patch updates payload.
    required: true
    schema:
      $ref: '#/definitions/mEmitterPatchUpdatesPayload'

  # Oscillator Patches:

  pOscillatorPatchKey:
    name: oscillatorPatchKey
    in: path
    description: Oscillator patch key.
    required: true
    type: string

  pOscillatorPatchQueryKey:
    name: k
    in: query
    description: Oscillator patch key.
    required: false
    collectionFormat: multi
    type: array
    items:
      type: string

  pOscillatorPatchUpdatesPayload:
    name: oscillatorPatchUpdatesPayload
    in: body
    description: Oscillator patch updates payload.
    required: true
    schema:
      $ref: '#/definitions/mOscillatorPatchUpdatesPayload'

  # Oscillator Patch Envelopes:

  pOscillatorPatchEnvelopeUpdatesPayload:
    name: oscillatorPatchEnvelopesUpdatesPayload
    in: body
    description: Oscillator patch envelope updates payload.
    required: true
    schema:
      $ref: '#/definitions/mOscillatorPatchEnvelopeUpdatesPayload'

#
# Responses:
#
responses:

  # Success
  rSuccess:
    description: Success
    schema:
      $ref: '#/definitions/mServiceResult'

#
# Paths:
#
paths:

  # Fields:
  /f:

    # ReportFields():
    get:
      description: "ReportFields() operation"
      parameters:
        - $ref: '#/parameters/pFieldQueryKey'
        - $ref: '#/parameters/pCommonQuerySections'
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Fields"
        - "Layer: Simulation"

    # CreateFields():
    post:
      description: "CreateFields() operation"
      parameters:
        - $ref: '#/parameters/pFieldConstructorsPayload'
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Fields"
        - "Layer: Simulation"

    # UpdateFields():
    put:
      description: "UpdateFields() operation"
      parameters:
        - $ref: '#/parameters/pFieldUpdatesPayload'
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Fields"
        - "Layer: Simulation"

    # DestroyFields():
    delete:
      description: "DestroyFields() operation"
      parameters:
        - $ref: '#/parameters/pFieldDestructorsPayload'
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Fields"
        - "Layer: Simulation"

  # Field Emitters:
  /f/{fieldKey}/fe:
    parameters:
      - $ref: '#/parameters/pFieldKey'

    # ReportFieldEmitters():
    get:
      description: "ReportFieldEmitters() operation"
      parameters:
        - $ref: '#/parameters/pFieldEmitterQueryKey'
        - $ref: '#/parameters/pCommonQuerySections'
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Field Emitters"
        - "Layer: Simulation"

    # CreateFieldEmitters():
    post:
      description: "CreateFieldEmitters() operation"
      parameters:
        - $ref: '#/parameters/pFieldEmitterConstructorsPayload'
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Field Emitters"
        - "Layer: Simulation"

    # UpdateFieldEmitters():
    put:
      description: "UpdateFieldEmitters() operation"
      parameters:
        - $ref: '#/parameters/pFieldEmitterUpdatesPayload'
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Field Emitters"
        - "Layer: Simulation"

    # DestroyFieldEmitters():
    delete:
      description: "DestroyFieldEmitters() operation"
      parameters:
        - $ref: '#/parameters/pFieldEmitterDestructorsPayload'
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Field Emitters"
        - "Layer: Simulation"

  /f/{fieldKey}/fe/m:
    parameters:
      - $ref: '#/parameters/pFieldKey'

    # CallFieldEmitters():
    put:
      description: "CallFieldEmitters() operation"
      parameters:
        - $ref: '#/parameters/pFieldEmitterCallsPayload'
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Field Emitters"
        - "Layer: Simulation"

  # Field Oscillators:
  /f/{fieldKey}/fo:
    parameters:
      - $ref: '#/parameters/pFieldKey'

    # ReportFieldOscillators():
    get:
      description: "ReportFieldOscillators() operation"
      parameters:
        - $ref: '#/parameters/pFieldOscillatorQueryKey'
        - $ref: '#/parameters/pCommonQuerySections'
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Field Oscillators"
        - "Layer: Simulation"

    # UpdateFieldOscillators():
    put:
      description: "UpdateFieldOscillators() operation"
      parameters:
        - $ref: '#/parameters/pFieldOscillatorUpdatesPayload'
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Field Oscillators"
        - "Layer: Simulation"

    # DestroyFieldOscillators():
    delete:
      description: "DestroyFieldOscillators() operation"
      deprecated: true
      parameters:
        - $ref: '#/parameters/pFieldOscillatorDestructorsPayload'
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Field Oscillators"
        - "Layer: Simulation"

  /f/{fieldKey}/fe/{fieldEmitterKey}/fo:
    parameters:
      - $ref: '#/parameters/pFieldKey'
      - $ref: '#/parameters/pFieldEmitterKey'

    # ReportOscillatorsOfFieldEmitter():
    get:
      description: "ReportOscillatorsOfFieldEmitter() operation"
      parameters:
        - $ref: '#/parameters/pFieldOscillatorQueryKey'
        - $ref: '#/parameters/pCommonQuerySections'
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Field Oscillators"
        - "Layer: Simulation"

    # CreateFieldOscillators():
    post:
      description: "CreateFieldOscillators() operation"
      deprecated: true
      parameters:
        - $ref: '#/parameters/pFieldOscillatorConstructorsPayload'
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Field Oscillators"
        - "Layer: Simulation"

  /f/{fieldKey}/fo/m:
    parameters:
      - $ref: '#/parameters/pFieldKey'

    # CallFieldOscillators():
    put:
      description: "CallFieldOscillators() operation"
      parameters:
        - $ref: '#/parameters/pFieldOscillatorCallsPayload'
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Field Oscillators"
        - "Layer: Simulation"

  # Subjects:
  /f/{fieldKey}/s:
    parameters:
      - $ref: '#/parameters/pFieldKey'

    # ReportSubjects():
    get:
      description: "ReportSubjects() operation"
      parameters:
        - $ref: '#/parameters/pSubjectQueryKey'
        - $ref: '#/parameters/pCommonQuerySections'
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Subjects"
        - "Layer: Simulation"

    # CreateSubjects():
    post:
      description: "CreateSubjects() operation"
      parameters:
        - $ref: '#/parameters/pSubjectConstructorsPayload'
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Subjects"
        - "Layer: Simulation"

    # UpdateSubjects():
    put:
      description: "UpdateSubjects() operation"
      parameters:
        - $ref: '#/parameters/pSubjectUpdatesPayload'
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Subjects"
        - "Layer: Simulation"

    # DestroySubjects():
    delete:
      description: "DestroySubjects() operation"
      parameters:
        - $ref: '#/parameters/pSubjectDestructorsPayload'
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Subjects"
        - "Layer: Simulation"

  # Subject Emitters:
  /f/{fieldKey}/se:
    parameters:
      - $ref: '#/parameters/pFieldKey'

    # ReportSubjectEmitters():
    get:
      description: "ReportSubjectEmitters() operation"
      parameters:
        - $ref: '#/parameters/pSubjectEmitterQueryKey'
        - $ref: '#/parameters/pCommonQuerySections'
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Subject Emitters"
        - "Layer: Simulation"

    # UpdateSubjectEmitters():
    put:
      description: "UpdateSubjectEmitters() operation"
      parameters:
        - $ref: '#/parameters/pSubjectEmitterUpdatesPayload'
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Subject Emitters"
        - "Layer: Simulation"

    # DestroySubjectsEmitters():
    delete:
      description: "DestroySubjectsEmitters() operation"
      parameters:
        - $ref: '#/parameters/pSubjectEmitterDestructorsPayload'
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Subject Emitters"
        - "Layer: Simulation"

  /f/{fieldKey}/s/{subjectKey}/se:
    parameters:
      - $ref: '#/parameters/pFieldKey'
      - $ref: '#/parameters/pSubjectKey'

    # ReportEmittersOfSubject():
    get:
      description: "ReportEmittersOfSubject() operation"
      parameters:
        - $ref: '#/parameters/pSubjectEmitterQueryKey'
        - $ref: '#/parameters/pCommonQuerySections'
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Subject Emitters"
        - "Layer: Simulation"

    # CreateSubjectEmitters():
    post:
      description: "CreateSubjectEmitters() operation"
      parameters:
        - $ref: '#/parameters/pSubjectEmitterConstructorsPayload'
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Subject Emitters"
        - "Layer: Simulation"

  /f/{fieldKey}/se/m:
    parameters:
      - $ref: '#/parameters/pFieldKey'

    # CallSubjectEmitters():
    put:
      description: "CallSubjectEmitters() operation"
      parameters:
        - $ref: '#/parameters/pSubjectEmitterCallsPayload'
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Subject Emitters"
        - "Layer: Simulation"

  # Subject Oscillators:
  /f/{fieldKey}/so:
    parameters:
      - $ref: '#/parameters/pFieldKey'

    # ReportSubjectOscillators():
    get:
      description: "ReportSubjectOscillators() operation"
      parameters:
        - $ref: '#/parameters/pSubjectOscillatorQueryKey'
        - $ref: '#/parameters/pCommonQuerySections'
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Subject Oscillators"
        - "Layer: Simulation"

    # UpdateSubjectOscillators():
    put:
      description: "UpdateSubjectOscillators() operation"
      parameters:
        - $ref: '#/parameters/pSubjectOscillatorUpdatesPayload'
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Subject Oscillators"
        - "Layer: Simulation"

    # DestroySubjectOscillators():
    delete:
      description: "DestroySubjectOscillators() operation"
      deprecated: true
      parameters:
        - $ref: '#/parameters/pSubjectOscillatorDestructorsPayload'
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Subject Oscillators"
        - "Layer: Simulation"

  /f/{fieldKey}/se/{subjectEmitterKey}/so:
    parameters:
      - $ref: '#/parameters/pFieldKey'
      - $ref: '#/parameters/pSubjectEmitterKey'

    # ReportOscillatorsOfSubjectEmitter():
    get:
      description: "ReportOscillatorsOfSubjectEmitter() operation"
      parameters:
        - $ref: '#/parameters/pSubjectOscillatorQueryKey'
        - $ref: '#/parameters/pCommonQuerySections'
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Subject Oscillators"
        - "Layer: Simulation"

    # CreateSubjectOscillators():
    post:
      description: "CreateSubjectOscillators() operation"
      deprecated: true
      parameters:
        - $ref: '#/parameters/pSubjectOscillatorConstructorsPayload'
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Subject Oscillators"
        - "Layer: Simulation"

  /f/{fieldKey}/so/m:
    parameters:
      - $ref: '#/parameters/pFieldKey'

    # CallSubjectOscillators():
    put:
      description: "CallSubjectOscillators() operation"
      parameters:
        - $ref: '#/parameters/pSubjectOscillatorCallsPayload'
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Subject Oscillators"
        - "Layer: Simulation"

  # Probes:
  /f/{fieldKey}/p:
    parameters:
      - $ref: '#/parameters/pFieldKey'

    # ReportProbes():
    get:
      description: "ReportProbes() operation"
      parameters:
        - $ref: '#/parameters/pProbeQueryKey'
        - $ref: '#/parameters/pCommonQuerySections'
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Probes"
        - "Layer: Simulation"

    # CreateProbes():
    post:
      description: "CreateProbes() operation"
      parameters:
        - $ref: '#/parameters/pProbeConstructorsPayload'
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Probes"
        - "Layer: Simulation"

    # UpdateProbes():
    put:
      description: "UpdateProbes() operation"
      parameters:
        - $ref: '#/parameters/pProbeUpdatesPayload'
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Probes"
        - "Layer: Simulation"

    # DestroyProbes():
    delete:
      description: "DestroyProbes() operation"
      parameters:
        - $ref: '#/parameters/pProbeDestructorsPayload'
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Probes"
        - "Layer: Simulation"

  # Probe Emitters:
  /f/{fieldKey}/pe:
    parameters:
      - $ref: '#/parameters/pFieldKey'

    # ReportProbeEmitters():
    get:
      description: "ReportProbeEmitters() operation"
      parameters:
        - $ref: '#/parameters/pProbeEmitterQueryKey'
        - $ref: '#/parameters/pCommonQuerySections'
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Probe Emitters"
        - "Layer: Simulation"

    # UpdateProbeEmitters():
    put:
      description: "UpdateProbeEmitters() operation"
      parameters:
        - $ref: '#/parameters/pProbeEmitterUpdatesPayload'
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Probe Emitters"
        - "Layer: Simulation"

    # DestroyProbesEmitters():
    delete:
      description: "DestroyProbesEmitters() operation"
      parameters:
        - $ref: '#/parameters/pProbeEmitterDestructorsPayload'
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Probe Emitters"
        - "Layer: Simulation"

  /f/{fieldKey}/p/{probeKey}/pe:
    parameters:
      - $ref: '#/parameters/pFieldKey'
      - $ref: '#/parameters/pProbeKey'

    # ReportEmittersOfProbe():
    get:
      description: "ReportEmittersOfProbe() operation"
      parameters:
        - $ref: '#/parameters/pProbeEmitterQueryKey'
        - $ref: '#/parameters/pCommonQuerySections'
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Probe Emitters"
        - "Layer: Simulation"

    # CreateProbeEmitters():
    post:
      description: "CreateProbeEmitters() operation"
      parameters:
        - $ref: '#/parameters/pProbeEmitterConstructorsPayload'
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Probe Emitters"
        - "Layer: Simulation"

  /f/{fieldKey}/pe/m:
    parameters:
      - $ref: '#/parameters/pFieldKey'

    # CallProbeEmitters():
    put:
      description: "CallProbeEmitters() operation"
      parameters:
        - $ref: '#/parameters/pProbeEmitterCallsPayload'
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Probe Emitters"
        - "Layer: Simulation"

  # Probe Oscillators:
  /f/{fieldKey}/po:
    parameters:
      - $ref: '#/parameters/pFieldKey'

    # ReportProbeOscillators():
    get:
      description: "ReportProbeOscillators() operation"
      parameters:
        - $ref: '#/parameters/pProbeOscillatorQueryKey'
        - $ref: '#/parameters/pCommonQuerySections'
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Probe Oscillators"
        - "Layer: Simulation"

    # UpdateProbeOscillators():
    put:
      description: "UpdateProbeOscillators() operation"
      parameters:
        - $ref: '#/parameters/pProbeOscillatorUpdatesPayload'
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Probe Oscillators"
        - "Layer: Simulation"

    # DestroyProbeOscillators():
    delete:
      description: "DestroyProbeOscillators() operation"
      deprecated: true
      parameters:
        - $ref: '#/parameters/pProbeOscillatorDestructorsPayload'
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Probe Oscillators"
        - "Layer: Simulation"

  /f/{fieldKey}/pe/{probeEmitterKey}/po:
    parameters:
      - $ref: '#/parameters/pFieldKey'
      - $ref: '#/parameters/pProbeEmitterKey'

    # ReportOscillatorsOfProbeEmitter():
    get:
      description: "ReportOscillatorsOfProbeEmitter() operation"
      parameters:
        - $ref: '#/parameters/pProbeOscillatorQueryKey'
        - $ref: '#/parameters/pCommonQuerySections'
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Probe Oscillators"
        - "Layer: Simulation"

    # CreateProbeOscillators():
    post:
      description: "CreateProbeOscillators() operation"
      deprecated: true
      parameters:
        - $ref: '#/parameters/pProbeOscillatorConstructorsPayload'
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Probe Oscillators"
        - "Layer: Simulation"

  /f/{fieldKey}/po/m:
    parameters:
      - $ref: '#/parameters/pFieldKey'

    # CallProbeOscillators():
    put:
      description: "CallProbeOscillators() operation"
      parameters:
        - $ref: '#/parameters/pProbeOscillatorCallsPayload'
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Probe Oscillators"
        - "Layer: Simulation"

  # Probe Collectors:
  /f/{fieldKey}/pc:
    parameters:
      - $ref: '#/parameters/pFieldKey'

    # ReportProbeCollectors():
    get:
      description: "ReportProbeCollectors() operation"
      parameters:
        - $ref: '#/parameters/pProbeCollectorQueryKey'
        - $ref: '#/parameters/pCommonQuerySections'
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Probe Collectors"
        - "Layer: Simulation"

    # UpdateProbeCollectors():
    put:
      description: "UpdateProbeCollectors() operation"
      parameters:
        - $ref: '#/parameters/pProbeCollectorUpdatesPayload'
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Probe Collectors"
        - "Layer: Simulation"

    # DestroyProbesCollectors():
    delete:
      description: "DestroyProbesCollectors() operation"
      parameters:
        - $ref: '#/parameters/pProbeCollectorDestructorsPayload'
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Probe Collectors"
        - "Layer: Simulation"

  /f/{fieldKey}/p/{probeKey}/pc:
    parameters:
      - $ref: '#/parameters/pFieldKey'
      - $ref: '#/parameters/pProbeKey'

    # ReportCollectorsOfProbe():
    get:
      description: "ReportCollectorsOfProbe() operation"
      parameters:
        - $ref: '#/parameters/pProbeCollectorQueryKey'
        - $ref: '#/parameters/pCommonQuerySections'
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Probe Collectors"
        - "Layer: Simulation"

    # CreateProbeCollectors():
    post:
      description: "CreateProbeCollectors() operation"
      parameters:
        - $ref: '#/parameters/pProbeCollectorConstructorsPayload'
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Probe Collectors"
        - "Layer: Simulation"

  /f/{fieldKey}/pca/{probeCollectorAlias}:
    parameters:
      - $ref: '#/parameters/pFieldKey'
      - $ref: '#/parameters/pProbeCollectorAlias'

    # LookupProbeCollector():
    get:
      description: "LookupProbeCollector() operation"
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Probe Collectors"
        - "Layer: Simulation"

  # Waveforms:
  /f/{fieldKey}/pc/{probeCollectorKey}/w:
    parameters:
      - $ref: '#/parameters/pFieldKey'
      - $ref: '#/parameters/pProbeCollectorKey'

    # ReportWaveformsAtProbeCollector():
    get:
      description: "ReportWaveformsAtProbeCollector() operation"
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Waveforms"
        - "Layer: Simulation"

  /f/{fieldKey}/w:
    parameters:
      - $ref: '#/parameters/pFieldKey'

    # ReportWaveformsAtSampler():
    get:
      description: "ReportWaveformsAtSampler() operation"
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Waveforms"
        - "Layer: Simulation"

  # Emitter Patches:
  /f/{fieldKey}/smpe:
    parameters:
      - $ref: '#/parameters/pFieldKey'

    # ReportEmitterPatches():
    get:
      description: "ReportEmitterPatches() operation"
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Emitter Patches"
        - "Layer: Modulation"

    # UpdateEmitterPatches():
    put:
      description: "UpdateEmitterPatches() operation"
      parameters:
        - $ref: '#/parameters/pEmitterPatchUpdatesPayload'
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Emitter Patches"
        - "Layer: Modulation"

  /f/{fieldKey}/fe/{fieldEmitterKey}/smpe:
    parameters:
      - $ref: '#/parameters/pFieldKey'
      - $ref: '#/parameters/pFieldEmitterKey'

    # ReportPatchOfFieldEmitter():
    get:
      description: "ReportPatchOfFieldEmitter() operation"
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Emitter Patches"
        - "Layer: Modulation"

  /f/{fieldKey}/se/{subjectEmitterKey}/smpe:
    parameters:
      - $ref: '#/parameters/pFieldKey'
      - $ref: '#/parameters/pSubjectEmitterKey'

    # ReportPatchOfSubjectEmitter():
    get:
      description: "ReportPatchOfSubjectEmitter() operation"
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Emitter Patches"
        - "Layer: Modulation"

  /f/{fieldKey}/pe/{probeEmitterKey}/smpe:
    parameters:
      - $ref: '#/parameters/pFieldKey'
      - $ref: '#/parameters/pProbeEmitterKey'

    # ReportPatchOfProbeEmitter():
    get:
      description: "ReportPatchOfProbeEmitter() operation"
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Emitter Patches"
        - "Layer: Modulation"

  # Oscillator Patches:
  /f/{fieldKey}/smpo:
    parameters:
      - $ref: '#/parameters/pFieldKey'

    # ReportOscillatorPatches():
    get:
      description: "ReportOscillatorPatches() operation"
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Oscillator Patches"
        - "Layer: Modulation"

    # UpdateOscillatorPatches():
    put:
      description: "UpdateOscillatorPatches() operation"
      parameters:
        - $ref: '#/parameters/pOscillatorPatchUpdatesPayload'
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Oscillator Patches"
        - "Layer: Modulation"

  /f/{fieldKey}/smpe/{emitterPatchKey}/smpo:
    parameters:
      - $ref: '#/parameters/pFieldKey'
      - $ref: '#/parameters/pEmitterPatchKey'

    # ReportOscillatorPatchesOfEmitterPatch():
    get:
      description: "ReportOscillatorPatchesOfEmitterPatch() operation"
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Oscillator Patches"
        - "Layer: Modulation"

  /f/{fieldKey}/fo/{fieldOscillatorKey}/smpo:
    parameters:
      - $ref: '#/parameters/pFieldKey'
      - $ref: '#/parameters/pFieldOscillatorKey'

    # ReportPatchOfFieldOscillator():
    get:
      description: "ReportPatchOfFieldOscillator() operation"
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Oscillator Patches"
        - "Layer: Modulation"

  /f/{fieldKey}/so/{subjectOscillatorKey}/smpo:
    parameters:
      - $ref: '#/parameters/pFieldKey'
      - $ref: '#/parameters/pSubjectOscillatorKey'

    # ReportPatchOfSubjectOscillator():
    get:
      description: "ReportPatchOfSubjectOscillator() operation"
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Oscillator Patches"
        - "Layer: Modulation"

  /f/{fieldKey}/po/{probeOscillatorKey}/smpo:
    parameters:
      - $ref: '#/parameters/pFieldKey'
      - $ref: '#/parameters/pProbeOscillatorKey'

    # ReportPatchOfProbeOscillator():
    get:
      description: "ReportPatchOfProbeOscillator() operation"
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Oscillator Patches"
        - "Layer: Modulation"

  # Oscillator Patch Envelopes:
  /f/{fieldKey}/smpo/{oscillatorPatchKey}/e:
    parameters:
      - $ref: '#/parameters/pFieldKey'
      - $ref: '#/parameters/pOscillatorPatchKey'

    # ReportOscillatorPatchEnvelopes():
    get:
      description: "ReportOscillatorPatchEnvelopes() operation"
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Oscillator Patch Envelopes"
        - "Layer: Modulation"

    # UpdateOscillatorPatchEnvelopes():
    put:
      description: "UpdateOscillatorPatchEnvelopes() operation"
      parameters:
        - $ref: '#/parameters/pOscillatorPatchEnvelopeUpdatesPayload'
      responses:
        200:
          $ref: '#/responses/rSuccess'
      tags:
        - "Elements: Oscillator Patch Envelopes"
        - "Layer: Modulation"
